<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reverse Engineer on Taha Draidia</title>
    <link>https://tahadraidia.com/tags/reverse-engineer/</link>
    <description>Recent content in Reverse Engineer on Taha Draidia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Nov 2021 07:21:19 +0000</lastBuildDate><atom:link href="https://tahadraidia.com/tags/reverse-engineer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Make SharpRDP a .NET Assembly Loadable</title>
      <link>https://tahadraidia.com/posts/make-sharprdp-an-assembly-loadable/</link>
      <pubDate>Mon, 29 Nov 2021 07:21:19 +0000</pubDate>
      
      <guid>https://tahadraidia.com/posts/make-sharprdp-an-assembly-loadable/</guid>
      <description>SharpRDP in a neat tool when it comes to get a command execution via RDP protocol, The project is written in C# .NET, which makes perfect to leverage .NET Assembly, however, in order to load an assembly the binary needs to expose the API and in this case SharpRDP is build in away that it can only be in traditional way.
If we look at the source code of the project on github, we can clearly see that Program class has internal attributes and the two methods have private attribute.</description>
    </item>
    
  </channel>
</rss>
